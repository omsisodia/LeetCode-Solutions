# Intuition
The problem is to find the third distinct maximum number in an array of integers. If the array has fewer than three distinct numbers, return the maximum number.

# Approach
Sort the Array: First, sort the array to group all identical values together.
Remove Duplicates: Traverse the sorted array and keep only distinct values.
Check Length: If there are at least three distinct values, return the third maximum. Otherwise, return the maximum value.

# Complexity
Time complexity:
O(nlogn)

Space complexity:
O(1)

# Code

class Solution {
public:
    int thirdMax(vector<int>& nums) {
        
        sort(nums.begin(), nums.end());

        int j = 0;
        for(int i = 1; i<nums.size(); i++){
            if(nums[i] != nums[j]){
                j++;
                nums[j] = nums[i];
            }
        }

        for(int i = 0; i<j+1; i++){
            cout<<nums[i]<<" ";
        }

        if(j + 1>= 3){
            return nums[j-2];
        }

        return nums[j];

    }
};
