# Intuition
The goal is to find the smallest positive integer that is missing from the array. Since positive integers start from 1, we need to identify the smallest missing integer by tracking which numbers are present

# Approach
Use a hashmap to record the presence of positive integers from the array. Iterate from 1 upwards to find the smallest integer not present in the hashmap.

# Complexity
Time complexity:
O(n)

Space complexity:
O(n)

# Code

class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
        unordered_map<int, bool> hashMap;

        // Store the occurrences of positive numbers in the hashmap
        for(int n: nums) {
            if(n > 0) {
                hashMap[n] = true;
            }
        }

        // Find the first missing positive integer
        int missing = 1; // Start with 1 since we are looking for the smallest positive integer
        while (hashMap.find(missing) != hashMap.end()) {
            ++missing;
        }

        return missing;
    }
};
